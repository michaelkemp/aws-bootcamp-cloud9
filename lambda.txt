Create Simple Lambda
====================

"AWS Resources -> Create a new Lambda function"

Function Name: kempyInsultLambda
Select blueprint: empty-python
Function trigger: API Gateway
Resource Path: /
Security: NONE



Python Code for Simple Lambda
=============================

import json
import random

adj1=["artless", "bawdy", "beslubbering", "bootless", "churlish", "cockered", "clouted", "craven", "currish", "dankish", "dissembling", "droning", "errant", "fawning", "fobbing", "forward", "frothy", "gleeking", "goatish", "gorbellied", "impertinent", "infectious", "jarring", "loggerheaded", "lumpish", "mammering", "mangled", "mewling", "paunchy", "pribbling", "puking", "puny", "qualling", "rank", "reeky", "roguish", "ruttish", "saucy", "spleeny", "spongy", "surly", "tottering", "unmuzzled", "vain", "venomed", "villainous", "warped", "wayward", "weedy", "yeast"]
adj2=["base-court", "bat-fowling", "beef-witted", "beetle-headed", "boil-brained", "clapper-clawed", "clay-brained", "common-kissing", "crook-pated", "dismal-dreaming", "dizzy-eyed", "doghearted", "dread-bolted", "earth-vexing", "elf-skinned", "fat-kidneyed", "fen-sucked", "flap-mouthed", "fly-bitten", "folly-fallen", "fool-born", "full-gorged", "guts-griping", "half-faced", "hasty-witted", "hedge-born", "hell-hated", "idle-headed", "ill-breeding", "ill-nurtured", "knotty-pated", "milk-livered", "motley-minded", "onion-eyed", "plume-plucked", "pottle-deep", "pox-marked", "reeling-ripe", "rough-hewn", "rude-growing", "rump-fed", "shard-borne", "sheep-biting", "spur-galled", "swag-bellied", "tardy-gaited", "tickle-brained", "toad-spotted", "unchin-snouted", "weather-bitten"]
noun=["apple-john", "baggage", "barnacle", "bladder", "boar-pig", "bugbear", "bum-bailey", "canker-blossom", "clack-dish", "clotpole", "coxcomb", "codpiece", "death-token", "dewberry", "flap-dragon", "flax-wench", "flirt-gill", "foot-licker", "fustilarian", "giglet", "gudgeon", "haggard", "harpy", "hedge-pig", "horn-beast", "hugger-mugger", "joithead", "lewdster", "lout", "maggot-pie", "malt-worm", "mammet", "measle", "minnow", "miscreant", "moldwarp", "mumble-news", "nut-hook", "pigeon-egg", "pignut", "puttock", "pumpion", "ratsbane", "scut", "skainsmate", "strumpet", "varlot", "vassal", "whey-face", "wagtail"]


def lambda_handler(event, context):
    
    try:
        event = json.loads(event["body"])
    except:
        pass
    

    try: 
        name = event["name"].capitalize() 
        insult = name + ", thou " + adj1[random.randint(0,49)] + " " + adj2[random.randint(1,49)] + " " + noun[random.randint(1,49)] + "."
    except:
        insult = "Thou " + adj1[random.randint(0,49)] + " " + adj2[random.randint(1,49)] + " " + noun[random.randint(1,49)] + "."
        
        
    retVal = {
        'statusCode': 200,
        'headers': { 'Content-Type': 'application/json' },
        'body': json.dumps( { 'insult': insult } )
    }
    
    return retVal



Payload
=======

{
    "name": "Michael"
    
}


Invoke URL
===========

https://d58uyib19h.execute-api.us-west-2.amazonaws.com/Prod

Test
=====

APIs -> cloud9-kempyInsultLambda -> Resources -> ANY -> Test

    Method: POST
    Request Body: { "name" : "Michael" }




